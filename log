2024-06-03 04:26:00 - root - INFO: - Dataset:Caltech101-20
2024-06-03 04:26:00 - root - INFO: - Prediction={
2024-06-03 04:26:00 - root - INFO: -           arch1 = [128, 256, 128]
2024-06-03 04:26:00 - root - INFO: -           arch2 = [128, 256, 128]
2024-06-03 04:26:00 - root - INFO: - Autoencoder={
2024-06-03 04:26:00 - root - INFO: -           arch1 = [1984, 1024, 1024, 1024, 128]
2024-06-03 04:26:00 - root - INFO: -           arch2 = [512, 1024, 1024, 1024, 128]
2024-06-03 04:26:00 - root - INFO: -           activations1 = relu
2024-06-03 04:26:00 - root - INFO: -           activations2 = relu
2024-06-03 04:26:00 - root - INFO: -           batchnorm = True
2024-06-03 04:26:00 - root - INFO: - training={
2024-06-03 04:26:00 - root - INFO: -           seed = 4
2024-06-03 04:26:00 - root - INFO: -           missing_rate = 0.5
2024-06-03 04:26:00 - root - INFO: -           start_dual_prediction = 100
2024-06-03 04:26:00 - root - INFO: -           batch_size = 256
2024-06-03 04:26:00 - root - INFO: -           epoch = 500
2024-06-03 04:26:00 - root - INFO: -           lr = 0.0001
2024-06-03 04:26:00 - root - INFO: -           alpha = 9
2024-06-03 04:26:00 - root - INFO: -           lambda1 = 0.1
2024-06-03 04:26:00 - root - INFO: -           lambda2 = 0.1
2024-06-03 04:26:00 - root - INFO: - print_num = 100
2024-06-03 04:26:00 - root - INFO: - dataset = Caltech101-20
2024-06-03 04:26:03 - root - INFO: - Autoencoder(
  (_encoder): Sequential(
    (0): Linear(in_features=1984, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=128, bias=True)
    (10): Softmax(dim=1)
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=1984, bias=True)
    (10): BatchNorm1d(1984, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU()
  )
)
2024-06-03 04:26:03 - root - INFO: - Prediction(
  (_encoder): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=128, out_features=256, bias=True)
    (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=256, out_features=128, bias=True)
    (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=256, bias=True)
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=256, out_features=128, bias=True)
    (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=128, out_features=128, bias=True)
    (7): Softmax(dim=1)
  )
)
2024-06-03 04:26:03 - root - INFO: - Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 0
)
2024-06-03 04:29:41 - root - INFO: - Epoch : 100/500 ===> Reconstruction loss = 0.2798===> Reconstruction loss = 0.0308 ===> Dual prediction loss = 0.0173  ===> Contrastive loss = -4.4796e+02 ===> Loss = -4.4793e+02
2024-06-03 04:29:42 - root - INFO: - view_concat {'kmeans': {'AMI': 0.5932, 'NMI': 0.607, 'ARI': 0.5887, 'accuracy': 0.5951, 'precision': 0.4905, 'recall': 0.392, 'f_measure': 0.4101}}
2024-06-03 04:33:24 - root - INFO: - Epoch : 200/500 ===> Reconstruction loss = 0.2569===> Reconstruction loss = 0.0235 ===> Dual prediction loss = 0.0013  ===> Contrastive loss = -4.4794e+02 ===> Loss = -4.4791e+02
2024-06-03 04:33:25 - root - INFO: - view_concat {'kmeans': {'AMI': 0.7003, 'NMI': 0.7106, 'ARI': 0.8977, 'accuracy': 0.7598, 'precision': 0.4845, 'recall': 0.4545, 'f_measure': 0.4399}}
2024-06-03 04:37:04 - root - INFO: - Epoch : 300/500 ===> Reconstruction loss = 0.2419===> Reconstruction loss = 0.0259 ===> Dual prediction loss = 0.0011  ===> Contrastive loss = -4.4764e+02 ===> Loss = -4.4761e+02
2024-06-03 04:37:06 - root - INFO: - view_concat {'kmeans': {'AMI': 0.7013, 'NMI': 0.7117, 'ARI': 0.8899, 'accuracy': 0.7661, 'precision': 0.5051, 'recall': 0.4684, 'f_measure': 0.4543}}
2024-06-03 04:40:46 - root - INFO: - Epoch : 400/500 ===> Reconstruction loss = 0.2319===> Reconstruction loss = 0.0204 ===> Dual prediction loss = 0.0008  ===> Contrastive loss = -4.4848e+02 ===> Loss = -4.4845e+02
2024-06-03 04:40:48 - root - INFO: - view_concat {'kmeans': {'AMI': 0.7071, 'NMI': 0.7173, 'ARI': 0.9021, 'accuracy': 0.7645, 'precision': 0.5146, 'recall': 0.4639, 'f_measure': 0.4513}}
2024-06-03 04:44:28 - root - INFO: - Epoch : 500/500 ===> Reconstruction loss = 0.2231===> Reconstruction loss = 0.0202 ===> Dual prediction loss = 0.0014  ===> Contrastive loss = -4.4875e+02 ===> Loss = -4.4873e+02
2024-06-03 04:44:30 - root - INFO: - view_concat {'kmeans': {'AMI': 0.7059, 'NMI': 0.7162, 'ARI': 0.9008, 'accuracy': 0.7636, 'precision': 0.5135, 'recall': 0.4735, 'f_measure': 0.4581}}
2024-06-03 04:44:30 - root - INFO: - Autoencoder(
  (_encoder): Sequential(
    (0): Linear(in_features=1984, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=128, bias=True)
    (10): Softmax(dim=1)
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=1984, bias=True)
    (10): BatchNorm1d(1984, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU()
  )
)
2024-06-03 04:44:30 - root - INFO: - Prediction(
  (_encoder): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=128, out_features=256, bias=True)
    (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=256, out_features=128, bias=True)
    (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=256, bias=True)
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=256, out_features=128, bias=True)
    (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=128, out_features=128, bias=True)
    (7): Softmax(dim=1)
  )
)
2024-06-03 04:44:30 - root - INFO: - Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 0
)
2024-06-03 04:48:10 - root - INFO: - Epoch : 100/500 ===> Reconstruction loss = 0.2804===> Reconstruction loss = 0.0252 ===> Dual prediction loss = 0.0186  ===> Contrastive loss = -4.4850e+02 ===> Loss = -4.4847e+02
2024-06-03 04:48:11 - root - INFO: - view_concat {'kmeans': {'AMI': 0.5602, 'NMI': 0.5749, 'ARI': 0.4098, 'accuracy': 0.4975, 'precision': 0.4862, 'recall': 0.379, 'f_measure': 0.3849}}
2024-06-03 04:51:59 - root - INFO: - Epoch : 200/500 ===> Reconstruction loss = 0.2613===> Reconstruction loss = 0.0225 ===> Dual prediction loss = 0.0013  ===> Contrastive loss = -4.4992e+02 ===> Loss = -4.4989e+02
2024-06-03 04:52:01 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6443, 'NMI': 0.656, 'ARI': 0.6295, 'accuracy': 0.6119, 'precision': 0.4989, 'recall': 0.4393, 'f_measure': 0.4399}}
2024-06-03 04:55:49 - root - INFO: - Epoch : 300/500 ===> Reconstruction loss = 0.2495===> Reconstruction loss = 0.0215 ===> Dual prediction loss = 0.0004  ===> Contrastive loss = -4.4963e+02 ===> Loss = -4.4960e+02
2024-06-03 04:55:50 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6431, 'NMI': 0.655, 'ARI': 0.6291, 'accuracy': 0.609, 'precision': 0.515, 'recall': 0.4341, 'f_measure': 0.4347}}
2024-06-03 04:59:36 - root - INFO: - Epoch : 400/500 ===> Reconstruction loss = 0.2385===> Reconstruction loss = 0.0204 ===> Dual prediction loss = 0.0011  ===> Contrastive loss = -4.4936e+02 ===> Loss = -4.4933e+02
2024-06-03 04:59:38 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6429, 'NMI': 0.6545, 'ARI': 0.632, 'accuracy': 0.6157, 'precision': 0.4879, 'recall': 0.4505, 'f_measure': 0.4369}}
2024-06-03 05:03:25 - root - INFO: - Epoch : 500/500 ===> Reconstruction loss = 0.2321===> Reconstruction loss = 0.0209 ===> Dual prediction loss = 0.0007  ===> Contrastive loss = -4.5007e+02 ===> Loss = -4.5004e+02
2024-06-03 05:03:26 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6497, 'NMI': 0.6614, 'ARI': 0.6326, 'accuracy': 0.6052, 'precision': 0.4806, 'recall': 0.4189, 'f_measure': 0.417}}
2024-06-03 05:03:26 - root - INFO: - Autoencoder(
  (_encoder): Sequential(
    (0): Linear(in_features=1984, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=128, bias=True)
    (10): Softmax(dim=1)
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=1984, bias=True)
    (10): BatchNorm1d(1984, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU()
  )
)
2024-06-03 05:03:26 - root - INFO: - Prediction(
  (_encoder): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=128, out_features=256, bias=True)
    (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=256, out_features=128, bias=True)
    (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=256, bias=True)
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=256, out_features=128, bias=True)
    (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=128, out_features=128, bias=True)
    (7): Softmax(dim=1)
  )
)
2024-06-03 05:03:26 - root - INFO: - Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 0
)
2024-06-03 05:07:06 - root - INFO: - Epoch : 100/500 ===> Reconstruction loss = 0.2780===> Reconstruction loss = 0.0238 ===> Dual prediction loss = 0.0143  ===> Contrastive loss = -4.4731e+02 ===> Loss = -4.4728e+02
2024-06-03 05:07:08 - root - INFO: - view_concat {'kmeans': {'AMI': 0.608, 'NMI': 0.6212, 'ARI': 0.677, 'accuracy': 0.6153, 'precision': 0.4473, 'recall': 0.3803, 'f_measure': 0.3766}}
2024-06-03 05:10:57 - root - INFO: - Epoch : 200/500 ===> Reconstruction loss = 0.2638===> Reconstruction loss = 0.0223 ===> Dual prediction loss = 0.0014  ===> Contrastive loss = -4.4896e+02 ===> Loss = -4.4893e+02
2024-06-03 05:10:59 - root - INFO: - view_concat {'kmeans': {'AMI': 0.64, 'NMI': 0.6516, 'ARI': 0.55, 'accuracy': 0.57, 'precision': 0.4261, 'recall': 0.4176, 'f_measure': 0.3836}}
2024-06-03 05:14:46 - root - INFO: - Epoch : 300/500 ===> Reconstruction loss = 0.2487===> Reconstruction loss = 0.0245 ===> Dual prediction loss = 0.0009  ===> Contrastive loss = -4.4949e+02 ===> Loss = -4.4946e+02
2024-06-03 05:14:48 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6715, 'NMI': 0.6815, 'ARI': 0.6693, 'accuracy': 0.6232, 'precision': 0.4292, 'recall': 0.4174, 'f_measure': 0.3809}}
2024-06-03 05:18:34 - root - INFO: - Epoch : 400/500 ===> Reconstruction loss = 0.2339===> Reconstruction loss = 0.0191 ===> Dual prediction loss = 0.0008  ===> Contrastive loss = -4.4938e+02 ===> Loss = -4.4935e+02
2024-06-03 05:18:36 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6731, 'NMI': 0.6832, 'ARI': 0.6686, 'accuracy': 0.6253, 'precision': 0.4315, 'recall': 0.4152, 'f_measure': 0.3795}}
2024-06-03 05:22:22 - root - INFO: - Epoch : 500/500 ===> Reconstruction loss = 0.2241===> Reconstruction loss = 0.0209 ===> Dual prediction loss = 0.0010  ===> Contrastive loss = -4.4886e+02 ===> Loss = -4.4884e+02
2024-06-03 05:22:23 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6714, 'NMI': 0.6818, 'ARI': 0.6729, 'accuracy': 0.6299, 'precision': 0.4611, 'recall': 0.4306, 'f_measure': 0.4035}}
2024-06-03 05:22:24 - root - INFO: - Autoencoder(
  (_encoder): Sequential(
    (0): Linear(in_features=1984, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=128, bias=True)
    (10): Softmax(dim=1)
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=1984, bias=True)
    (10): BatchNorm1d(1984, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU()
  )
)
2024-06-03 05:22:24 - root - INFO: - Prediction(
  (_encoder): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=128, out_features=256, bias=True)
    (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=256, out_features=128, bias=True)
    (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=256, bias=True)
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=256, out_features=128, bias=True)
    (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=128, out_features=128, bias=True)
    (7): Softmax(dim=1)
  )
)
2024-06-03 05:22:24 - root - INFO: - Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 0
)
2024-06-03 05:26:00 - root - INFO: - Epoch : 100/500 ===> Reconstruction loss = 0.2843===> Reconstruction loss = 0.0287 ===> Dual prediction loss = 0.0151  ===> Contrastive loss = -4.4784e+02 ===> Loss = -4.4781e+02
2024-06-03 05:26:02 - root - INFO: - view_concat {'kmeans': {'AMI': 0.5877, 'NMI': 0.6012, 'ARI': 0.4252, 'accuracy': 0.5025, 'precision': 0.4467, 'recall': 0.4142, 'f_measure': 0.4034}}
2024-06-03 05:29:45 - root - INFO: - Epoch : 200/500 ===> Reconstruction loss = 0.2630===> Reconstruction loss = 0.0267 ===> Dual prediction loss = 0.0009  ===> Contrastive loss = -4.4937e+02 ===> Loss = -4.4934e+02
2024-06-03 05:29:46 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6522, 'NMI': 0.6633, 'ARI': 0.5437, 'accuracy': 0.5872, 'precision': 0.4414, 'recall': 0.4438, 'f_measure': 0.4213}}
2024-06-03 05:33:29 - root - INFO: - Epoch : 300/500 ===> Reconstruction loss = 0.2503===> Reconstruction loss = 0.0237 ===> Dual prediction loss = 0.0004  ===> Contrastive loss = -4.4919e+02 ===> Loss = -4.4916e+02
2024-06-03 05:33:31 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6857, 'NMI': 0.6958, 'ARI': 0.7433, 'accuracy': 0.7079, 'precision': 0.4564, 'recall': 0.4572, 'f_measure': 0.4388}}
2024-06-03 05:37:14 - root - INFO: - Epoch : 400/500 ===> Reconstruction loss = 0.2387===> Reconstruction loss = 0.0226 ===> Dual prediction loss = 0.0007  ===> Contrastive loss = -4.4796e+02 ===> Loss = -4.4793e+02
2024-06-03 05:37:15 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6861, 'NMI': 0.6959, 'ARI': 0.7417, 'accuracy': 0.7091, 'precision': 0.4649, 'recall': 0.4593, 'f_measure': 0.4353}}
2024-06-03 05:40:57 - root - INFO: - Epoch : 500/500 ===> Reconstruction loss = 0.2267===> Reconstruction loss = 0.0221 ===> Dual prediction loss = 0.0009  ===> Contrastive loss = -4.4916e+02 ===> Loss = -4.4914e+02
2024-06-03 05:41:00 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6901, 'NMI': 0.6999, 'ARI': 0.7457, 'accuracy': 0.7075, 'precision': 0.4671, 'recall': 0.4506, 'f_measure': 0.4388}}
2024-06-03 05:41:00 - root - INFO: - Autoencoder(
  (_encoder): Sequential(
    (0): Linear(in_features=1984, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=128, bias=True)
    (10): Softmax(dim=1)
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=1024, bias=True)
    (1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=1024, out_features=1024, bias=True)
    (4): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=1024, out_features=1024, bias=True)
    (7): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
    (9): Linear(in_features=1024, out_features=1984, bias=True)
    (10): BatchNorm1d(1984, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): ReLU()
  )
)
2024-06-03 05:41:00 - root - INFO: - Prediction(
  (_encoder): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=128, out_features=256, bias=True)
    (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=256, out_features=128, bias=True)
    (7): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU()
  )
  (_decoder): Sequential(
    (0): Linear(in_features=128, out_features=256, bias=True)
    (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Linear(in_features=256, out_features=128, bias=True)
    (4): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU()
    (6): Linear(in_features=128, out_features=128, bias=True)
    (7): Softmax(dim=1)
  )
)
2024-06-03 05:41:00 - root - INFO: - Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0001
    maximize: False
    weight_decay: 0
)
2024-06-03 05:44:41 - root - INFO: - Epoch : 100/500 ===> Reconstruction loss = 0.2934===> Reconstruction loss = 0.0273 ===> Dual prediction loss = 0.0161  ===> Contrastive loss = -4.4723e+02 ===> Loss = -4.4720e+02
2024-06-03 05:44:42 - root - INFO: - view_concat {'kmeans': {'AMI': 0.5666, 'NMI': 0.581, 'ARI': 0.4748, 'accuracy': 0.5293, 'precision': 0.4584, 'recall': 0.3981, 'f_measure': 0.3961}}
2024-06-03 05:48:28 - root - INFO: - Epoch : 200/500 ===> Reconstruction loss = 0.2720===> Reconstruction loss = 0.0226 ===> Dual prediction loss = 0.0008  ===> Contrastive loss = -4.4777e+02 ===> Loss = -4.4774e+02
2024-06-03 05:48:29 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6687, 'NMI': 0.6797, 'ARI': 0.7204, 'accuracy': 0.6806, 'precision': 0.4563, 'recall': 0.4672, 'f_measure': 0.4332}}
2024-06-03 05:52:15 - root - INFO: - Epoch : 300/500 ===> Reconstruction loss = 0.2570===> Reconstruction loss = 0.0206 ===> Dual prediction loss = 0.0004  ===> Contrastive loss = -4.4884e+02 ===> Loss = -4.4881e+02
2024-06-03 05:52:16 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6978, 'NMI': 0.7077, 'ARI': 0.8898, 'accuracy': 0.7598, 'precision': 0.4684, 'recall': 0.4804, 'f_measure': 0.4397}}
2024-06-03 05:56:02 - root - INFO: - Epoch : 400/500 ===> Reconstruction loss = 0.2475===> Reconstruction loss = 0.0198 ===> Dual prediction loss = 0.0005  ===> Contrastive loss = -4.4831e+02 ===> Loss = -4.4828e+02
2024-06-03 05:56:05 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6969, 'NMI': 0.7068, 'ARI': 0.8906, 'accuracy': 0.7552, 'precision': 0.4759, 'recall': 0.4635, 'f_measure': 0.4204}}
2024-06-03 05:59:51 - root - INFO: - Epoch : 500/500 ===> Reconstruction loss = 0.2375===> Reconstruction loss = 0.0191 ===> Dual prediction loss = 0.0007  ===> Contrastive loss = -4.4877e+02 ===> Loss = -4.4875e+02
2024-06-03 05:59:53 - root - INFO: - view_concat {'kmeans': {'AMI': 0.6955, 'NMI': 0.7055, 'ARI': 0.8891, 'accuracy': 0.7598, 'precision': 0.476, 'recall': 0.477, 'f_measure': 0.4412}}
2024-06-03 05:59:53 - root - INFO: - --------------------Training over--------------------
2024-06-03 05:59:53 - root - INFO: - ACC:[0.7636, 0.6052, 0.6299, 0.7075, 0.7598]
2024-06-03 05:59:53 - root - INFO: - NMI:[0.7162, 0.6614, 0.6818, 0.6999, 0.7055]
2024-06-03 05:59:53 - root - INFO: - ARI:[0.9008, 0.6326, 0.6729, 0.7457, 0.8891]
2024-06-03 05:59:53 - root - INFO: -  ACC 69.32 std 6.53 NMI 69.30 std 1.93 ARI 76.82 std 10.97
